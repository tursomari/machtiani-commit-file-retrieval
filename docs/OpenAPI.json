{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/test-pull-access/": {
      "post": {
        "summary": "Test Pull Access",
        "description": "Test pull access by checking if the user can pull from the repository.",
        "operationId": "test_pull_access_test_pull_access__post",
        "parameters": [
          {
            "name": "project_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name of the project",
              "title": "Project Name"
            },
            "description": "The name of the project"
          },
          {
            "name": "codehost_api_key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "writeOnly": true,
              "format": "password",
              "description": "Code host API key for authentication",
              "title": "Codehost Api Key"
            },
            "description": "Code host API key for authentication"
          },
          {
            "name": "codehost_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Code host URL for the repository",
              "title": "Codehost Url"
            },
            "description": "Code host URL for the repository"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/status/": {
      "get": {
        "summary": "Check Repo Lock Route",
        "description": "Check if the repo.lock file is present after verifying push access.",
        "operationId": "check_repo_lock_route_status__get",
        "parameters": [
          {
            "name": "codehost_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri",
              "minLength": 1,
              "description": "Code host URL for the repository",
              "title": "Codehost Url"
            },
            "description": "Code host URL for the repository"
          },
          {
            "name": "api_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "writeOnly": true,
                  "format": "password"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional API key for authentication",
              "title": "Api Key"
            },
            "description": "Optional API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Check Repo Lock Route",
        "description": "Check if the repo.lock file is present after verifying push access.",
        "operationId": "check_repo_lock_route_status_get",
        "parameters": [
          {
            "name": "codehost_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uri",
              "minLength": 1,
              "description": "Code host URL for the repository",
              "title": "Codehost Url"
            },
            "description": "Code host URL for the repository"
          },
          {
            "name": "api_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "writeOnly": true,
                  "format": "password"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional API key for authentication",
              "title": "Api Key"
            },
            "description": "Optional API key for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/get-file-summary/": {
      "get": {
        "summary": "Get File Summary",
        "description": "Retrieve summaries for specified file paths.",
        "operationId": "get_file_summary_get_file_summary__get",
        "parameters": [
          {
            "name": "file_paths",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of file paths to retrieve summaries for",
              "title": "File Paths"
            },
            "description": "List of file paths to retrieve summaries for"
          },
          {
            "name": "project_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name of the project",
              "title": "Project Name"
            },
            "description": "The name of the project"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/load/": {
      "post": {
        "summary": "Handle Load",
        "operationId": "handle_load_load__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Load Request",
                "description": "Request body containing the OpenAI API key."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/add-repository/": {
      "post": {
        "summary": "Handle Add Repository",
        "operationId": "handle_add_repository_add_repository__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRepositoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/add-repository": {
      "post": {
        "summary": "Handle Add Repository",
        "operationId": "handle_add_repository_add_repository_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRepositoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fetch-and-checkout/": {
      "post": {
        "summary": "Handle Fetch And Checkout Branch",
        "operationId": "handle_fetch_and_checkout_branch_fetch_and_checkout__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchAndCheckoutBranchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fetch-and-checkout": {
      "post": {
        "summary": "Handle Fetch And Checkout Branch",
        "operationId": "handle_fetch_and_checkout_branch_fetch_and_checkout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchAndCheckoutBranchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/infer-file/": {
      "post": {
        "summary": "Infer File",
        "operationId": "infer_file_infer_file__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_infer_file_infer_file__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileSearchResponse"
                  },
                  "type": "array",
                  "title": "Response Infer File Infer File  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/retrieve-file-contents/": {
      "post": {
        "summary": "Get File Contents",
        "operationId": "get_file_contents_retrieve_file_contents__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_file_contents_retrieve_file_contents__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/file-paths/": {
      "get": {
        "summary": "Get File Paths",
        "operationId": "get_file_paths_file_paths__get",
        "parameters": [
          {
            "name": "prompt",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The prompt to search for",
              "title": "Prompt"
            },
            "description": "The prompt to search for"
          },
          {
            "name": "mode",
            "in": "query",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SearchMode"
                }
              ],
              "description": "Search mode: pure-chat, commit, or super",
              "title": "Mode"
            },
            "description": "Search mode: pure-chat, commit, or super"
          },
          {
            "name": "model",
            "in": "query",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EmbeddingModel"
                }
              ],
              "description": "The embedding model used",
              "title": "Model"
            },
            "description": "The embedding model used"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/load/token-count": {
      "post": {
        "summary": "Count Tokens Load",
        "operationId": "count_tokens_load_load_token_count_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Load Request",
                "description": "Request body containing the OpenAI API key."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/add-repository/token-count": {
      "post": {
        "summary": "Count Tokens Add Repository",
        "operationId": "count_tokens_add_repository_add_repository_token_count_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRepositoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/fetch-and-checkout/token-count": {
      "post": {
        "summary": "Count Tokens Fetch And Checkout",
        "operationId": "count_tokens_fetch_and_checkout_fetch_and_checkout_token_count_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchAndCheckoutBranchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generate-response/token-count": {
      "post": {
        "summary": "Count Tokens Generate Response",
        "description": "Count tokens for a given prompt to be used in generating a response.",
        "operationId": "count_tokens_generate_response_generate_response_token_count_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_count_tokens_generate_response_generate_response_token_count_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/delete-store/": {
      "post": {
        "summary": "Handle Delete Store",
        "operationId": "handle_delete_store_delete_store__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteStoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddRepositoryRequest": {
        "properties": {
          "codehost_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Codehost Url"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "vcs_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VCSType"
              }
            ],
            "default": "git"
          },
          "ignore_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ignore Files",
            "default": []
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key"
          },
          "openai_api_key": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Openai Api Key"
          }
        },
        "type": "object",
        "required": [
          "codehost_url",
          "project_name"
        ],
        "title": "AddRepositoryRequest"
      },
      "Body_count_tokens_generate_response_generate_response_token_count_post": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The prompt to search for"
          },
          "project": {
            "type": "string",
            "title": "Project",
            "description": "The project to search"
          },
          "mode": {
            "type": "string",
            "title": "Mode",
            "description": "Search mode: chat, commit, or super"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The embedding model used"
          },
          "match_strength": {
            "type": "string",
            "title": "Match Strength",
            "description": "The strength of the match"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "project",
          "mode",
          "model",
          "match_strength"
        ],
        "title": "Body_count_tokens_generate_response_generate_response_token_count_post"
      },
      "Body_get_file_contents_retrieve_file_contents__post": {
        "properties": {
          "project_name": {
            "type": "string",
            "title": "Project Name",
            "description": "The name of the project"
          },
          "file_paths": {
            "items": {
              "$ref": "#/components/schemas/FilePathEntry"
            },
            "type": "array",
            "title": "File Paths",
            "description": "A list of file paths to retrieve content for"
          },
          "ignore_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ignore Files",
            "description": "A list of files to ignore during retrieval"
          }
        },
        "type": "object",
        "required": [
          "project_name",
          "file_paths",
          "ignore_files"
        ],
        "title": "Body_get_file_contents_retrieve_file_contents__post"
      },
      "Body_infer_file_infer_file__post": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The prompt to search for"
          },
          "project": {
            "type": "string",
            "title": "Project",
            "description": "The project to search"
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchMode"
              }
            ],
            "description": "Search mode: pure-chat, commit, or super"
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbeddingModel"
              }
            ],
            "description": "The embedding model used"
          },
          "match_strength": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MatchStrength"
              }
            ],
            "description": "The strength of the match"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key",
            "description": "OpenAI API key"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "project",
          "mode",
          "model",
          "match_strength",
          "api_key"
        ],
        "title": "Body_infer_file_infer_file__post"
      },
      "DeleteStoreRequest": {
        "properties": {
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "codehost_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Codehost Url"
          },
          "ignore_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ignore Files",
            "default": []
          },
          "vcs_type": {
            "$ref": "#/components/schemas/VCSType"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key"
          },
          "openai_api_key": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Openai Api Key"
          }
        },
        "type": "object",
        "required": [
          "project_name",
          "codehost_url",
          "vcs_type"
        ],
        "title": "DeleteStoreRequest"
      },
      "EmbeddingModel": {
        "type": "string",
        "enum": [
          "gpt-4o",
          "gpt-4o-mini"
        ],
        "title": "EmbeddingModel"
      },
      "FetchAndCheckoutBranchRequest": {
        "properties": {
          "codehost_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Codehost Url"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "branch_name": {
            "type": "string",
            "title": "Branch Name"
          },
          "ignore_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ignore Files",
            "default": []
          },
          "vcs_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VCSType"
              }
            ],
            "default": "git"
          },
          "api_key": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key"
          },
          "openai_api_key": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Openai Api Key"
          }
        },
        "type": "object",
        "required": [
          "codehost_url",
          "project_name",
          "branch_name"
        ],
        "title": "FetchAndCheckoutBranchRequest"
      },
      "FileContentResponse": {
        "properties": {
          "contents": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Contents"
          },
          "retrieved_file_paths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Retrieved File Paths"
          }
        },
        "type": "object",
        "required": [
          "contents",
          "retrieved_file_paths"
        ],
        "title": "FileContentResponse"
      },
      "FilePathEntry": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "path"
        ],
        "title": "FilePathEntry"
      },
      "FileSearchResponse": {
        "properties": {
          "oid": {
            "type": "string",
            "title": "Oid"
          },
          "similarity": {
            "type": "number",
            "title": "Similarity"
          },
          "file_paths": {
            "items": {
              "$ref": "#/components/schemas/FilePathEntry"
            },
            "type": "array",
            "title": "File Paths"
          },
          "embedding_model": {
            "$ref": "#/components/schemas/EmbeddingModel"
          },
          "mode": {
            "$ref": "#/components/schemas/SearchMode"
          }
        },
        "type": "object",
        "required": [
          "oid",
          "similarity",
          "file_paths",
          "embedding_model",
          "mode"
        ],
        "title": "FileSearchResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MatchStrength": {
        "type": "string",
        "enum": [
          "high",
          "mid",
          "low"
        ],
        "title": "MatchStrength"
      },
      "SearchMode": {
        "type": "string",
        "enum": [
          "pure-chat",
          "commit",
          "super"
        ],
        "title": "SearchMode"
      },
      "VCSType": {
        "type": "string",
        "enum": [
          "git"
        ],
        "const": "git",
        "title": "VCSType"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
